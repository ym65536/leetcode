TreeNode* sortedListToBST(ListNode* head) {
    if (head == nullptr) {
        return nullptr;
    }
    ListNode* fast = head;
    ListNode* slow = head;
    ListNode* prev = nullptr;
    while (fast && fast->next) {
        prev = slow;
        slow = slow->next;
        fast = fast->next->next;
    }
    TreeNode* root = new TreeNode(slow->val);
    if (prev != nullptr) {
        prev->next = nullptr;
        root->left = sortedListToBST(head);
    }
    root->right = sortedListToBST(slow->next);
    return root;
}
