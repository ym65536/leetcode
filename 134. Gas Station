/*
对于一个循环数组，如果这个数组整体和 SUM >= 0，那么必然可以在数组中找到这么一个元素：从这个数组元素出发，绕数组一圈，能保证累加和一直是出于非负状态。
1.当到达某一站点时，若这个值小于0了，则说明从起点到这个点中间的任何一个点都不能作为起点，则把起点设为下一个点，继续遍历
2.能走完整个环的前提是gas的总量要大于cost的总量，这样才会有起点的存在。
*/
int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
    int start = 0;
    int total = 0;
    int sum = 0;
    for (int i = 0; i < gas.size(); i++) {
        total += gas[i] - cost[i];
        sum += gas[i] - cost[i];
        if (sum < 0) {
            start = i + 1;
            sum = 0;
        }
    }

    return (total >= 0) ? start : -1;
}
