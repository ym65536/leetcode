vector<int> rightSideView(TreeNode* root) {
    queue<TreeNode*> nodes;
    TreeNode* visit = root;
    vector<int> result;
    if (visit) {
        nodes.push(visit);
    }
    int level_current = 1;
    int level_next = 0;
    while (!nodes.empty()) {
        visit = nodes.front();
        nodes.pop();
        -- level_current;
        if (visit->left) {
            nodes.push(visit->left);
            ++ level_next;
        }
        if (visit->right) {
            nodes.push(visit->right);
            ++ level_next;
        }
        if (level_current == 0) {
            level_current = level_next;
            result.push_back(visit->val);
            level_next = 0;
        }
    }
    return result;
}
