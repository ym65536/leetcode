public class NestedIterator implements Iterator<Integer> {

    public NestedIterator(List<NestedInteger> nestedList) {
        for (int i = nestedList.size() - 1; i >= 0; -- i) {
            store.push(nestedList.get(i));
        }
    }

    @Override
    public Integer next() {
        NestedInteger nt = store.pop();
        return nt.getInteger();
    }

    @Override
    public boolean hasNext() {
        while (!store.empty()) {
            NestedInteger nt = store.peek();
            if (nt.isInteger()) {
                return true;
            }
            store.pop();
            List<NestedInteger> list = nt.getList();
            for (int i = list.size() - 1; i >= 0; -- i) {
                store.push(list.get(i));
            }
        }
        return false;
    }
    
    private Stack<NestedInteger> store = new Stack<NestedInteger>();
}
