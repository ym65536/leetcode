vector<string> generateParenthesis(int n) 
{
    vector<string> result;
    dfs(result, "", n, n);

    return result;
}

void dfs(vector<string>& result, string item, int left, int right)
{
    if (left == 0 && right == 0)
    {
        result.push_back(item);
        return;
    }
    if (left > 0)
    {
        dfs(result, item + "(", left - 1, right);
    }
    if (right > left)
    {
        dfs(result, item + ")", left, right - 1);
    }
}
