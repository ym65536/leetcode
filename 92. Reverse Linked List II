ListNode* reverseBetween(ListNode* head, int m, int n) {
    ListNode dummy(INT_MIN);
    dummy.next = head;
    ListNode* prev = &dummy;
    for (int i = 0; i < m - 1; ++ i) {
        prev = prev->next;
    }
    ListNode* tail = head;
    for (int i = 0; i < n; ++ i) {
        tail = tail->next;
    }
    reverse(prev, tail);
    return dummy.next;
}

ListNode* reverse(ListNode* prev, ListNode* tail) {
    ListNode* last = prev->next;
    while (last->next != tail) {
        ListNode* node = last->next;
        last->next = node->next;
        node->next = prev->next;
        prev->next = node;
    }
    return last;
}
