vector<vector<int>> pathSum(TreeNode* root, int sum) {
    vector<vector<int>> result;
    vector<int> solution;
    dfs(result, solution, root, sum);
    return result;
}

void dfs(vector<vector<int>>& result, vector<int>& solution, TreeNode* root, int target) {
    if (root == nullptr) {
        return;
    }
    solution.push_back(root->val);
    if (target == root->val && isLeaf(root)) {
        result.push_back(solution);
    }
    dfs(result, solution, root->left, target - root->val);
    dfs(result, solution, root->right, target - root->val);
    solution.pop_back();
}

bool isLeaf(TreeNode* root) {
    return root != nullptr && root->left == nullptr && root->right == nullptr;
}
