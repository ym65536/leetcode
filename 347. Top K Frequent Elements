vector<int> topKFrequent(vector<int>& nums, int k) {
    unordered_map<int, int> freq;
    for (const auto& num : nums) {
        ++ freq[num];
    }
    vector<pair<int, int>> kvs;
    for (const auto& item : freq) {
        kvs.push_back(make_pair(item.first, item.second));
    }
    auto cmp = [](const pair<int, int>& a, const pair<int, int>& b) {
        return a.second < b.second;
    };
    make_heap(kvs.begin(), kvs.end(), cmp);
    vector<int> result;
    for (int i = 0; i < k; ++ i) {
        result.push_back(kvs.front().first);
        pop_heap(kvs.begin(), kvs.end(), cmp);
        kvs.pop_back();
    }
    return result;
}
