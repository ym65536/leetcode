bool isCousins(TreeNode* root, int x, int y) {
    queue<pair<TreeNode*, TreeNode*>> store; // current, parent
    if (root == nullptr) {
        return false;
    }
    store.push(make_pair(root, nullptr));
    TreeNode* xparent = nullptr;
    TreeNode* yparent = nullptr;
    while (!store.empty()) {
        int queue_size = store.size();
        bool xfound = false, yfound = false;
        for (int i = 0; i < queue_size; ++ i) {
            auto node = store.front();
            store.pop();
            auto current = node.first;
            if (current->val == x) {
                xfound = true;
                xparent = node.second;
            }
            if (current->val == y) {
                yfound = true;
                yparent = node.second;
            }
            if (current->left) {
                store.push(make_pair(current->left, current));
            }
            if (current->right) {
                store.push(make_pair(current->right, current));
            }
        }
        if (xfound || yfound) {
            return (xfound && yfound && xparent != yparent);
        }
    }
    return false;
}
