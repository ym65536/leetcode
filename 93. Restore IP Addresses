vector<string> restoreIpAddresses(string s) 
{
    vector<string> result;
    if (s.size() < 4 || s.size() > 12)
        return result;

    dfs(result, s, "", 0);

    return result;
}

void dfs(vector<string>& result, string s, string item, int count)
{
    if (count == 3 && isValid(s))
    {
        item = item + s;
        result.push_back(item);
        return;
    }

    for (int i = 1; i <= 3 && i < s.size(); i++)
    {
        string sub = s.substr(0, i);
        if (!isValid(sub))
            continue;
        dfs(result, s.substr(i), item + sub + ".", count + 1);
    }
}

bool isValid(const string& str)
{
    if (str.size() == 0 || (str[0] == '0' && str.size() > 1))
        return false;
    int value = atoi(str.c_str());

    return (value >= 0 && value <= 255); 
}
