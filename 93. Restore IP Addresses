vector<string> restoreIpAddresses(string s) {
    vector<string> result;
    if (s.size() < 4 || s.size() > 12) {
        return result;
    }
    dfs(result, s, "", 0);
    return result;
}

void dfs(vector<string>& result, string left, string solution, int count) {
    if (count == 3 && isValid(left)) {
        solution = solution + left;
        result.push_back(solution);
        return;
    }
    for (int i = 1; i <= 3 && i < left.size(); ++ i) {
        string sub = left.substr(0, i);
        if (!isValid(sub)) {
            continue;
        }
        dfs(result, left.substr(i), solution + sub + ".", count + 1);
    }
}

bool isValid(const string& str) {
    if (str.empty() || str.size() > 3 || (str.size() > 1 && str[0] == '0')) {
        return false;
    }
    int val = atoi(str.c_str());
    return val >= 0 && val <= 255;
}
