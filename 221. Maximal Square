int maximalSquare(vector<vector<char>>& matrix) {
	if (matrix.empty() || matrix[0].empty()) {
		return 0;
	}
	int max_len = 0;
	int m = matrix.size();
	int n = matrix[0].size();
	vector<vector<int>> A(m, vector<int>(n, 0));
	for (int i = 0; i < m; ++ i) {
		for (int j = 0; j < n; ++ j) {
			if (matrix[i][j] == '1') {
				if (i == 0 || j == 0) {
					A[i][j] = 1;
				} else {
					A[i][j] = min(A[i-1][j-1], min(A[i-1][j], A[i][j-1])) + 1;
				}
				max_len = max(max_len, A[i][j]);
			}
		}
	}
	return max_len * max_len;
}
