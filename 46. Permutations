vector<vector<int>> permute(vector<int>& nums) {
      vector<vector<int>> result;
      vector<int> solution;
      backtrace(result, solution, nums);
      return result;
  }

  void backtrace(vector<vector<int>>& result, vector<int>& solution, const vector<int>& nums) {
      if (solution.size() == nums.size()) {
          result.push_back(solution);
          return;
      }
      for (int i = 0; i < nums.size(); ++ i) {
          auto it = find(solution.begin(), solution.end(), nums[i]);
          if (it != solution.end()) {
              continue;
          }
          solution.push_back(nums[i]);
          backtrace(result, solution, nums);
          solution.pop_back();
      }
  }
