int singleNonDuplicate(vector<int>& nums) {
	int low = 0;
	int high = nums.size() - 1;
	int mid = 0;
	while (low <= high) {
		mid = (low + high) / 2;
		if (mid > 0 && nums[mid] == nums[mid - 1]) {
			if (mid % 2 == 0) {
				high = mid - 2;
			} else {
				low = mid + 1;
			}
		} else if (mid < (nums.size() - 1) && nums[mid] == nums[mid + 1]) {
			if (mid % 2 == 0) {
				low = mid + 2;
			} else {
				high = mid - 1;
			}
		} else {
			break;
		}
	}
	return nums[mid];
}
