class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if (head == nullptr || head->next == nullptr) {
            return head;
        }
        ListNode dummy(-1, head);
        return reverseList(&dummy, nullptr);
    }
private:
    ListNode* reverseList(ListNode* prev, ListNode* tail) {
        ListNode* last = prev->next;
        while (last->next != tail) {
            ListNode* node = last->next;
            last->next = node->next;
            node->next = prev->next;
            prev->next = node;
        }
        return prev->next;
    }
};
