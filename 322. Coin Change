int coinChange(vector<int>& coins, int amount) {
    vector<int> values(amount + 1, INT_MAX);
    values[0] = 0;
    for (int i = 1; i <= amount; ++ i) {
        for (auto coin : coins) {
            if (coin <= i && values[i - coin] != INT_MAX) {
                values[i] = min(values[i], values[i - coin] + 1);
            }
        }
    }
    return values[amount] == INT_MAX ? -1 : values[amount];
}


public int coinChange(int[] coins, int amount) {
    int[] store = new int[amount + 1];
    Arrays.fill(store, Integer.MAX_VALUE);
    store[0] = 0;
    for (int price = 1; price <= amount; ++ price) {
        for (int j = 0; j < coins.length; ++ j) {
            if (price >= coins[j] && store[price - coins[j]] != Integer.MAX_VALUE) {
                store[price] = Math.min(store[price], store[price - coins[j]] + 1); 
            }
        }
    }
    return store[amount] == Integer.MAX_VALUE ? -1 : store[amount];
}
