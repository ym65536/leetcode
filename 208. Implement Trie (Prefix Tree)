class Trie {
public:
    struct TrieNode {
        TrieNode* nodes[26] = {nullptr};
        bool leaf = false;
    };
    
    /** Initialize your data structure here. */
    Trie() {
        root_ = new TrieNode();
    }
    
    /** Inserts a word into the trie. */
    void insert(string word) {
        TrieNode* tn = root_;
        for (auto c : word) {
            c -= 'a';
            if (tn->nodes[c] == nullptr) {
                tn->nodes[c] = new TrieNode();
            } 
            tn = tn->nodes[c];
        }
        tn->leaf = true;
    }
    
    /** Returns if the word is in the trie. */
    bool search(string word) {
        TrieNode* tn = root_;
        for (auto c : word) {
            c -= 'a';
            if (tn->nodes[c] == nullptr) {
                return false;
            }
            tn = tn->nodes[c];
        }
        return tn->leaf;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    bool startsWith(string prefix) {
        TrieNode* tn = root_;
        for (auto c : prefix) {
            c -= 'a';
            if (tn->nodes[c] == nullptr) {
                return false;
            }
            tn = tn->nodes[c];
        }
        return true;
    }
private:
    TrieNode* root_ = nullptr;
};
