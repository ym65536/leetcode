ListNode* removeNthFromEnd(ListNode* head, int n) {
    ListNode dummy = ListNode(INT_MIN);
    dummy.next = head;
    ListNode* fast = &dummy;
    ListNode* slow = &dummy;
    for (int i = 0; i < n; ++ i) {
        fast = fast->next;
    }
    while (fast != nullptr && fast->next != nullptr) {
        fast = fast->next;
        slow = slow->next;
    }
    slow->next = slow->next->next;
    return dummy.next;
}

public ListNode removeNthFromEnd(ListNode head, int n) {
    if (head == null) {
        return head;
    }
    ListNode dummy = new ListNode(-1);
    dummy.next = head;
    ListNode fast = dummy;
    for (int i = 0; i < n; ++ i) {
        fast = fast.next;
    }
    ListNode slow = dummy;
    while (fast.next != null) {
        fast = fast.next;
        slow = slow.next;
    }
    slow.next = slow.next.next;
    return dummy.next;
}
